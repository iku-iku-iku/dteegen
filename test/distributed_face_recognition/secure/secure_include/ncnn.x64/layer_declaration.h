// Layer Declaration header
//
// This file is auto-generated by cmake, don't edit it.

#include "layer/absval.h"
namespace ncnn { DEFINE_LAYER_CREATOR(AbsVal) }
#include "layer/batchnorm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(BatchNorm) }
#include "layer/x86/batchnorm_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(BatchNorm_x86) }
#include "layer/x86/batchnorm_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(BatchNorm_x86_avx512) }
#include "layer/x86/batchnorm_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(BatchNorm_x86_fma) }
#include "layer/x86/batchnorm_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(BatchNorm_x86_avx) }
#include "layer/bias.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Bias) }
#include "layer/x86/bias_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Bias_x86) }
#include "layer/x86/bias_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Bias_x86_avx512) }
#include "layer/x86/bias_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Bias_x86_fma) }
#include "layer/x86/bias_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Bias_x86_avx) }
#include "layer/bnll.h"
namespace ncnn { DEFINE_LAYER_CREATOR(BNLL) }
#include "layer/x86/bnll_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(BNLL_x86) }
#include "layer/x86/bnll_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(BNLL_x86_avx512) }
#include "layer/x86/bnll_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(BNLL_x86_fma) }
#include "layer/x86/bnll_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(BNLL_x86_avx) }
#include "layer/concat.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Concat) }
#include "layer/x86/concat_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Concat_x86) }
#include "layer/x86/concat_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Concat_x86_avx512) }
#include "layer/x86/concat_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Concat_x86_fma) }
#include "layer/x86/concat_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Concat_x86_avx) }
#include "layer/convolution.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Convolution) }
#include "layer/x86/convolution_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Convolution_x86) }
#include "layer/x86/convolution_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Convolution_x86_avx512) }
#include "layer/x86/convolution_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Convolution_x86_fma) }
#include "layer/x86/convolution_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Convolution_x86_avx) }
#include "layer/crop.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Crop) }
#include "layer/x86/crop_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Crop_x86) }
#include "layer/x86/crop_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Crop_x86_avx512) }
#include "layer/x86/crop_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Crop_x86_fma) }
#include "layer/x86/crop_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Crop_x86_avx) }
#include "layer/deconvolution.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Deconvolution) }
#include "layer/x86/deconvolution_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Deconvolution_x86) }
#include "layer/x86/deconvolution_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Deconvolution_x86_avx512) }
#include "layer/x86/deconvolution_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Deconvolution_x86_fma) }
#include "layer/x86/deconvolution_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Deconvolution_x86_avx) }
#include "layer/dropout.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Dropout) }
#include "layer/x86/dropout_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Dropout_x86) }
#include "layer/x86/dropout_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Dropout_x86_avx512) }
#include "layer/x86/dropout_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Dropout_x86_fma) }
#include "layer/x86/dropout_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Dropout_x86_avx) }
#include "layer/eltwise.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Eltwise) }
#include "layer/x86/eltwise_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Eltwise_x86) }
#include "layer/x86/eltwise_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Eltwise_x86_avx512) }
#include "layer/x86/eltwise_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Eltwise_x86_fma) }
#include "layer/x86/eltwise_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Eltwise_x86_avx) }
#include "layer/elu.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ELU) }
#include "layer/x86/elu_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ELU_x86) }
#include "layer/x86/elu_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ELU_x86_avx512) }
#include "layer/x86/elu_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ELU_x86_fma) }
#include "layer/x86/elu_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ELU_x86_avx) }
#include "layer/embed.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Embed) }
#include "layer/exp.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Exp) }
#include "layer/flatten.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Flatten) }
#include "layer/x86/flatten_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Flatten_x86) }
#include "layer/x86/flatten_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Flatten_x86_avx512) }
#include "layer/x86/flatten_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Flatten_x86_fma) }
#include "layer/x86/flatten_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Flatten_x86_avx) }
#include "layer/innerproduct.h"
namespace ncnn { DEFINE_LAYER_CREATOR(InnerProduct) }
#include "layer/x86/innerproduct_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(InnerProduct_x86) }
#include "layer/x86/innerproduct_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(InnerProduct_x86_avx512) }
#include "layer/x86/innerproduct_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(InnerProduct_x86_fma) }
#include "layer/x86/innerproduct_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(InnerProduct_x86_avx) }
#include "layer/input.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Input) }
#include "layer/log.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Log) }
#include "layer/lrn.h"
namespace ncnn { DEFINE_LAYER_CREATOR(LRN) }
#include "layer/x86/lrn_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(LRN_x86) }
#include "layer/x86/lrn_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(LRN_x86_avx512) }
#include "layer/x86/lrn_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(LRN_x86_fma) }
#include "layer/x86/lrn_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(LRN_x86_avx) }
#include "layer/memorydata.h"
namespace ncnn { DEFINE_LAYER_CREATOR(MemoryData) }
#include "layer/mvn.h"
namespace ncnn { DEFINE_LAYER_CREATOR(MVN) }
#include "layer/pooling.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Pooling) }
#include "layer/x86/pooling_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Pooling_x86) }
#include "layer/x86/pooling_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Pooling_x86_avx512) }
#include "layer/x86/pooling_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Pooling_x86_fma) }
#include "layer/x86/pooling_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Pooling_x86_avx) }
#include "layer/power.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Power) }
#include "layer/prelu.h"
namespace ncnn { DEFINE_LAYER_CREATOR(PReLU) }
#include "layer/x86/prelu_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(PReLU_x86) }
#include "layer/x86/prelu_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(PReLU_x86_avx512) }
#include "layer/x86/prelu_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(PReLU_x86_fma) }
#include "layer/x86/prelu_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(PReLU_x86_avx) }
#include "layer/proposal.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Proposal) }
#include "layer/reduction.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Reduction) }
#include "layer/relu.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ReLU) }
#include "layer/x86/relu_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ReLU_x86) }
#include "layer/x86/relu_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ReLU_x86_avx512) }
#include "layer/x86/relu_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ReLU_x86_fma) }
#include "layer/x86/relu_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ReLU_x86_avx) }
#include "layer/reshape.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Reshape) }
#include "layer/x86/reshape_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Reshape_x86) }
#include "layer/x86/reshape_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Reshape_x86_avx512) }
#include "layer/x86/reshape_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Reshape_x86_fma) }
#include "layer/x86/reshape_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Reshape_x86_avx) }
#include "layer/roipooling.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ROIPooling) }
#include "layer/scale.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Scale) }
#include "layer/x86/scale_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Scale_x86) }
#include "layer/x86/scale_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Scale_x86_avx512) }
#include "layer/x86/scale_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Scale_x86_fma) }
#include "layer/x86/scale_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Scale_x86_avx) }
#include "layer/sigmoid.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Sigmoid) }
#include "layer/x86/sigmoid_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Sigmoid_x86) }
#include "layer/x86/sigmoid_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Sigmoid_x86_avx512) }
#include "layer/x86/sigmoid_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Sigmoid_x86_fma) }
#include "layer/x86/sigmoid_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Sigmoid_x86_avx) }
#include "layer/slice.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Slice) }
#include "layer/x86/slice_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Slice_x86) }
#include "layer/x86/slice_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Slice_x86_avx512) }
#include "layer/x86/slice_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Slice_x86_fma) }
#include "layer/x86/slice_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Slice_x86_avx) }
#include "layer/softmax.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Softmax) }
#include "layer/x86/softmax_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Softmax_x86) }
#include "layer/x86/softmax_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Softmax_x86_avx512) }
#include "layer/x86/softmax_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Softmax_x86_fma) }
#include "layer/x86/softmax_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Softmax_x86_avx) }
#include "layer/split.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Split) }
#include "layer/tanh.h"
namespace ncnn { DEFINE_LAYER_CREATOR(TanH) }
#include "layer/x86/tanh_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(TanH_x86) }
#include "layer/x86/tanh_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(TanH_x86_avx512) }
#include "layer/x86/tanh_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(TanH_x86_fma) }
#include "layer/x86/tanh_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(TanH_x86_avx) }
#include "layer/threshold.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Threshold) }
#include "layer/tile.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Tile) }
#include "layer/rnn.h"
namespace ncnn { DEFINE_LAYER_CREATOR(RNN) }
#include "layer/lstm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(LSTM) }
#include "layer/x86/lstm_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(LSTM_x86) }
#include "layer/x86/lstm_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(LSTM_x86_avx512) }
#include "layer/x86/lstm_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(LSTM_x86_fma) }
#include "layer/x86/lstm_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(LSTM_x86_avx) }
#include "layer/binaryop.h"
namespace ncnn { DEFINE_LAYER_CREATOR(BinaryOp) }
#include "layer/x86/binaryop_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(BinaryOp_x86) }
#include "layer/x86/binaryop_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(BinaryOp_x86_avx512) }
#include "layer/x86/binaryop_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(BinaryOp_x86_fma) }
#include "layer/x86/binaryop_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(BinaryOp_x86_avx) }
#include "layer/unaryop.h"
namespace ncnn { DEFINE_LAYER_CREATOR(UnaryOp) }
#include "layer/x86/unaryop_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(UnaryOp_x86) }
#include "layer/x86/unaryop_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(UnaryOp_x86_avx512) }
#include "layer/x86/unaryop_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(UnaryOp_x86_fma) }
#include "layer/x86/unaryop_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(UnaryOp_x86_avx) }
#include "layer/convolutiondepthwise.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ConvolutionDepthWise) }
#include "layer/x86/convolutiondepthwise_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ConvolutionDepthWise_x86) }
#include "layer/x86/convolutiondepthwise_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ConvolutionDepthWise_x86_avx512) }
#include "layer/x86/convolutiondepthwise_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ConvolutionDepthWise_x86_fma) }
#include "layer/x86/convolutiondepthwise_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ConvolutionDepthWise_x86_avx) }
#include "layer/padding.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Padding) }
#include "layer/x86/padding_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Padding_x86) }
#include "layer/x86/padding_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Padding_x86_avx512) }
#include "layer/x86/padding_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Padding_x86_fma) }
#include "layer/x86/padding_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Padding_x86_avx) }
#include "layer/squeeze.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Squeeze) }
#include "layer/expanddims.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ExpandDims) }
#include "layer/normalize.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Normalize) }
#include "layer/permute.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Permute) }
#include "layer/priorbox.h"
namespace ncnn { DEFINE_LAYER_CREATOR(PriorBox) }
#include "layer/detectionoutput.h"
namespace ncnn { DEFINE_LAYER_CREATOR(DetectionOutput) }
#include "layer/interp.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Interp) }
#include "layer/x86/interp_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Interp_x86) }
#include "layer/x86/interp_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Interp_x86_avx512) }
#include "layer/x86/interp_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Interp_x86_fma) }
#include "layer/x86/interp_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Interp_x86_avx) }
#include "layer/deconvolutiondepthwise.h"
namespace ncnn { DEFINE_LAYER_CREATOR(DeconvolutionDepthWise) }
#include "layer/x86/deconvolutiondepthwise_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(DeconvolutionDepthWise_x86) }
#include "layer/x86/deconvolutiondepthwise_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(DeconvolutionDepthWise_x86_avx512) }
#include "layer/x86/deconvolutiondepthwise_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(DeconvolutionDepthWise_x86_fma) }
#include "layer/x86/deconvolutiondepthwise_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(DeconvolutionDepthWise_x86_avx) }
#include "layer/shufflechannel.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ShuffleChannel) }
#include "layer/x86/shufflechannel_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ShuffleChannel_x86) }
#include "layer/x86/shufflechannel_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ShuffleChannel_x86_avx512) }
#include "layer/x86/shufflechannel_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ShuffleChannel_x86_fma) }
#include "layer/x86/shufflechannel_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ShuffleChannel_x86_avx) }
#include "layer/instancenorm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(InstanceNorm) }
#include "layer/clip.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Clip) }
#include "layer/x86/clip_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Clip_x86) }
#include "layer/x86/clip_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Clip_x86_avx512) }
#include "layer/x86/clip_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Clip_x86_fma) }
#include "layer/x86/clip_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Clip_x86_avx) }
#include "layer/reorg.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Reorg) }
#include "layer/yolodetectionoutput.h"
namespace ncnn { DEFINE_LAYER_CREATOR(YoloDetectionOutput) }
#include "layer/quantize.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Quantize) }
#include "layer/x86/quantize_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Quantize_x86) }
#include "layer/x86/quantize_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Quantize_x86_avx512) }
#include "layer/x86/quantize_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Quantize_x86_fma) }
#include "layer/x86/quantize_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Quantize_x86_avx) }
#include "layer/dequantize.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Dequantize) }
#include "layer/x86/dequantize_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Dequantize_x86) }
#include "layer/x86/dequantize_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Dequantize_x86_avx512) }
#include "layer/x86/dequantize_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Dequantize_x86_fma) }
#include "layer/x86/dequantize_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Dequantize_x86_avx) }
#include "layer/yolov3detectionoutput.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Yolov3DetectionOutput) }
#include "layer/x86/yolov3detectionoutput_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Yolov3DetectionOutput_x86) }
#include "layer/x86/yolov3detectionoutput_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Yolov3DetectionOutput_x86_avx512) }
#include "layer/x86/yolov3detectionoutput_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Yolov3DetectionOutput_x86_fma) }
#include "layer/x86/yolov3detectionoutput_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Yolov3DetectionOutput_x86_avx) }
#include "layer/psroipooling.h"
namespace ncnn { DEFINE_LAYER_CREATOR(PSROIPooling) }
#include "layer/roialign.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ROIAlign) }
#include "layer/x86/roialign_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ROIAlign_x86) }
#include "layer/x86/roialign_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ROIAlign_x86_avx512) }
#include "layer/x86/roialign_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ROIAlign_x86_fma) }
#include "layer/x86/roialign_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ROIAlign_x86_avx) }
#include "layer/packing.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Packing) }
#include "layer/x86/packing_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Packing_x86) }
#include "layer/x86/packing_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Packing_x86_avx512) }
#include "layer/x86/packing_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Packing_x86_fma) }
#include "layer/x86/packing_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Packing_x86_avx) }
#include "layer/requantize.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Requantize) }
#include "layer/x86/requantize_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Requantize_x86) }
#include "layer/x86/requantize_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Requantize_x86_avx512) }
#include "layer/x86/requantize_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Requantize_x86_fma) }
#include "layer/x86/requantize_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Requantize_x86_avx) }
#include "layer/cast.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Cast) }
#include "layer/x86/cast_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Cast_x86) }
#include "layer/x86/cast_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Cast_x86_avx512) }
#include "layer/x86/cast_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Cast_x86_fma) }
#include "layer/x86/cast_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Cast_x86_avx) }
#include "layer/hardsigmoid.h"
namespace ncnn { DEFINE_LAYER_CREATOR(HardSigmoid) }
#include "layer/x86/hardsigmoid_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(HardSigmoid_x86) }
#include "layer/x86/hardsigmoid_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(HardSigmoid_x86_avx512) }
#include "layer/x86/hardsigmoid_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(HardSigmoid_x86_fma) }
#include "layer/x86/hardsigmoid_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(HardSigmoid_x86_avx) }
#include "layer/selu.h"
namespace ncnn { DEFINE_LAYER_CREATOR(SELU) }
#include "layer/x86/selu_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(SELU_x86) }
#include "layer/x86/selu_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(SELU_x86_avx512) }
#include "layer/x86/selu_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(SELU_x86_fma) }
#include "layer/x86/selu_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(SELU_x86_avx) }
#include "layer/hardswish.h"
namespace ncnn { DEFINE_LAYER_CREATOR(HardSwish) }
#include "layer/x86/hardswish_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(HardSwish_x86) }
#include "layer/x86/hardswish_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(HardSwish_x86_avx512) }
#include "layer/x86/hardswish_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(HardSwish_x86_fma) }
#include "layer/x86/hardswish_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(HardSwish_x86_avx) }
#include "layer/noop.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Noop) }
#include "layer/pixelshuffle.h"
namespace ncnn { DEFINE_LAYER_CREATOR(PixelShuffle) }
#include "layer/deepcopy.h"
namespace ncnn { DEFINE_LAYER_CREATOR(DeepCopy) }
#include "layer/mish.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Mish) }
#include "layer/x86/mish_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Mish_x86) }
#include "layer/x86/mish_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Mish_x86_avx512) }
#include "layer/x86/mish_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Mish_x86_fma) }
#include "layer/x86/mish_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Mish_x86_avx) }
#include "layer/statisticspooling.h"
namespace ncnn { DEFINE_LAYER_CREATOR(StatisticsPooling) }
#include "layer/swish.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Swish) }
#include "layer/x86/swish_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Swish_x86) }
#include "layer/x86/swish_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Swish_x86_avx512) }
#include "layer/x86/swish_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Swish_x86_fma) }
#include "layer/x86/swish_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Swish_x86_avx) }
#include "layer/gemm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Gemm) }
#include "layer/x86/gemm_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Gemm_x86) }
#include "layer/x86/gemm_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Gemm_x86_avx512) }
#include "layer/x86/gemm_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Gemm_x86_fma) }
#include "layer/x86/gemm_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Gemm_x86_avx) }
#include "layer/groupnorm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(GroupNorm) }
#include "layer/x86/groupnorm_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(GroupNorm_x86) }
#include "layer/x86/groupnorm_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(GroupNorm_x86_avx512) }
#include "layer/x86/groupnorm_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(GroupNorm_x86_fma) }
#include "layer/x86/groupnorm_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(GroupNorm_x86_avx) }
#include "layer/layernorm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(LayerNorm) }
#include "layer/x86/layernorm_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(LayerNorm_x86) }
#include "layer/x86/layernorm_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(LayerNorm_x86_avx512) }
#include "layer/x86/layernorm_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(LayerNorm_x86_fma) }
#include "layer/x86/layernorm_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(LayerNorm_x86_avx) }
#include "layer/softplus.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Softplus) }
#include "layer/gru.h"
namespace ncnn { DEFINE_LAYER_CREATOR(GRU) }
#include "layer/multiheadattention.h"
namespace ncnn { DEFINE_LAYER_CREATOR(MultiHeadAttention) }
#include "layer/x86/multiheadattention_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(MultiHeadAttention_x86) }
#include "layer/x86/multiheadattention_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(MultiHeadAttention_x86_avx512) }
#include "layer/x86/multiheadattention_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(MultiHeadAttention_x86_fma) }
#include "layer/x86/multiheadattention_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(MultiHeadAttention_x86_avx) }
#include "layer/gelu.h"
namespace ncnn { DEFINE_LAYER_CREATOR(GELU) }
#include "layer/x86/gelu_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(GELU_x86) }
#include "layer/x86/gelu_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(GELU_x86_avx512) }
#include "layer/x86/gelu_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(GELU_x86_fma) }
#include "layer/x86/gelu_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(GELU_x86_avx) }
#include "layer/convolution1d.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Convolution1D) }
#include "layer/x86/convolution1d_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Convolution1D_x86) }
#include "layer/x86/convolution1d_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Convolution1D_x86_avx512) }
#include "layer/x86/convolution1d_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Convolution1D_x86_fma) }
#include "layer/x86/convolution1d_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Convolution1D_x86_avx) }
#include "layer/pooling1d.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Pooling1D) }
#include "layer/convolutiondepthwise1d.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ConvolutionDepthWise1D) }
#include "layer/convolution3d.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Convolution3D) }
#include "layer/convolutiondepthwise3d.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ConvolutionDepthWise3D) }
#include "layer/pooling3d.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Pooling3D) }
#include "layer/matmul.h"
namespace ncnn { DEFINE_LAYER_CREATOR(MatMul) }
#include "layer/x86/matmul_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(MatMul_x86) }
#include "layer/x86/matmul_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(MatMul_x86_avx512) }
#include "layer/x86/matmul_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(MatMul_x86_fma) }
#include "layer/x86/matmul_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(MatMul_x86_avx) }
#include "layer/deconvolution1d.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Deconvolution1D) }
#include "layer/deconvolutiondepthwise1d.h"
namespace ncnn { DEFINE_LAYER_CREATOR(DeconvolutionDepthWise1D) }
#include "layer/deconvolution3d.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Deconvolution3D) }
#include "layer/deconvolutiondepthwise3d.h"
namespace ncnn { DEFINE_LAYER_CREATOR(DeconvolutionDepthWise3D) }
#include "layer/einsum.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Einsum) }
#include "layer/deformableconv2d.h"
namespace ncnn { DEFINE_LAYER_CREATOR(DeformableConv2D) }
#include "layer/x86/deformableconv2d_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(DeformableConv2D_x86) }
#include "layer/x86/deformableconv2d_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(DeformableConv2D_x86_avx512) }
#include "layer/x86/deformableconv2d_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(DeformableConv2D_x86_fma) }
#include "layer/x86/deformableconv2d_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(DeformableConv2D_x86_avx) }
#include "layer/glu.h"
namespace ncnn { DEFINE_LAYER_CREATOR(GLU) }
#include "layer/fold.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Fold) }
#include "layer/unfold.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Unfold) }
#include "layer/gridsample.h"
namespace ncnn { DEFINE_LAYER_CREATOR(GridSample) }
#include "layer/x86/gridsample_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(GridSample_x86) }
#include "layer/x86/gridsample_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(GridSample_x86_avx512) }
#include "layer/x86/gridsample_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(GridSample_x86_fma) }
#include "layer/x86/gridsample_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(GridSample_x86_avx) }
#include "layer/cumulativesum.h"
namespace ncnn { DEFINE_LAYER_CREATOR(CumulativeSum) }
#include "layer/copyto.h"
namespace ncnn { DEFINE_LAYER_CREATOR(CopyTo) }
#include "layer/erf.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Erf) }
#include "layer/diag.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Diag) }
#include "layer/celu.h"
namespace ncnn { DEFINE_LAYER_CREATOR(CELU) }
#include "layer/shrink.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Shrink) }

